name: Deploy to DigitalOcean Droplet

# This workflow runs on a push to the 'main' branch
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Deploy to DigitalOcean Droplet via SSH
      - name: Deploy with SSH and pull latest code
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Navigate to the correct directory

            # Master branch
            cd /var/www/app
            
            # Run the deployment commands provided by the user

            # Make safe before pulling new code
            git stash

            # Git pull command by it's self
            git pull origin master

            cd live.sharpishly.com
            # or main, depending on the branch
            git stash
            git checkout master
            git pull
            cd ..

            cd dev.sharpishly.com
            # or main, depending on the branch
            git stash
            git checkout master
            git pull
            cd ..

            # Move into submodule folder and pull latest changes
            cd python_app
            # or main, depending on the branch
            git stash
            git checkout master
            git pull origin master
            cd ..

            # Move into submodule folder and pull latest changes
            cd python_mvc
            # or main, depending on the branch
            git stash
            git checkout master
            git pull origin master
            cd ..

            # Git pull master repository and submodules
            git submodule update --init --recursive

            # Allow acces through firewall
            sudo ufw allow 80
            sudo ufw status

            # Set File and folder permissions
            sudo chmod -R 755 /var/www/app/sharpishly.com/website/public
            sudo chmod -R 755 /var/www/app/dev.sharpishly.com/website/public
            sudo chown -R www-data:www-data /var/www/app/sharpishly.com/website/public
            sudo chown -R www-data:www-data /var/www/app/dev.sharpishly.com/website/public
            sudo chmod -R 755 /var/www/app/python_project
            sudo chown -R www-data:www-data /var/www/app/python_project
            sudo chmod -R 755 /var/www/app/node_project
            sudo chown -R www-data:www-data /var/www/app/node_project
            sudo chmod -R 755 /var/www/app/letsencrypt
            sudo chown -R root:root /var/www/app/letsencrypt
            sudo chmod -R 755 /etc/letsencrypt
            sudo chown -R www-data:www-data /etc/letsencrypt

            # Stop docker
            docker-compose down

            # Start docker-compose
            docker-compose up -d --build
